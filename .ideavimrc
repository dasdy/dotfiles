" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

nnoremap <SPACE> <Nop>
let mapleader=" "

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
" map Q gq

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins
Plug 'dbakker/vim-paragraph-motion'

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
" gcc to comment out a line
" gc to comment target of a motion
Plug 'tpope/vim-commentary'
" Surround plugin
" S[({ to surround selection with brackets
" cs[({ to change surrounding brackets
" ds[({ to delete surrounding brackets
" closing brackets to omit spaces
Plug 'tpope/vim-surround'

let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']
" --- Custom settings ---
" Use system clipboard"
set clipboard+=unnamed
set quickscope
set which-key
set notimeout
set ideamarks
set hlsearch
set breakindent
set smartindent
set scrolloff=8
set showmatch
set matchtime=3
" J to join lines
set ideajoin
" Do not change mode when entering Intellij refactorings
set idearefactormode=keep

" delete without yanking
nnoremap <leader>d "_d

"" Move lines/blocks up/down
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv
"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \ to the formatting/refactoring stuff
map \f <Action>(ReformatCode)
map \r <Action>(Refactorings.QuickListPopupAction)
map \o <Action>(OptimizeImports)
map \b <Action>(ToggleLineBreakpoint)

" various jumps ...
nnoremap gs :action GotoSymbol<CR>
nnoremap gt :action GotoTest<CR>
nnoremap gp :action GotoSuperMethod<CR>
nnoremap ge :action GotoNextError<CR>
nnoremap gE :action GotoPreviousError<CR>

nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>

map 'm <Action>(ShowTypeBookmarks)

map <C-k> <Action>(QuickJavaDoc)
"inoremap <C-k> <Action>(QuickJavaDoc)
"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line